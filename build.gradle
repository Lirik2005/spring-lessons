plugins {
    id 'org.springframework.boot' version '2.6.2'
    id "io.spring.dependency-management" version '1.0.11.RELEASE'
    id "io.freefair.lombok" version "6.3.0"
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" //используется чтобы юзать Querydsl
}

apply from: 'version.gradle'

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    querydsl.extendsFrom annotationProcessor, implementation, compileOnly, runtimeOnly //используется чтобы юзать Querydsl
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.data:spring-data-envers' //используется для отслеживания ревизий
    implementation 'com.querydsl:querydsl-jpa' //используется чтобы юзать Querydsl
    implementation 'org.liquibase:liquibase-core' // используется для миграции базы данных

    annotationProcessor 'com.querydsl:querydsl-apt' //используется чтобы юзать Querydsl


    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //нужно чтобы поднимать в тестах базу данных полностью идентичную боевой
    testImplementation "org.testcontainers:postgresql:${versions.testcontainers}"
}

//используется чтобы юзать Querydsl. Чтобы все заработало надо выполнить таску build -> classes и зайти в пакет build, найти QUsers и там
//подтянуть импорты
querydsl {
    jpa = true
    library = "com.querydsl:querydsl-apt:${versions.querydsl}"
    querydslSourcesDir = "$buildDir/generated/sources/annotationProcessor/java/main"
}

//используется чтобы юзать Querydsl
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

test {
    useJUnitPlatform()
}

wrapper {
    gradleVersion '7.3'
}